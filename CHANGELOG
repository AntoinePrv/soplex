Release 1.4.1

- Bugfix in simplifier spxmainsm.cpp: wrong init for postsolving free column
  singletons fixed.

- Speed up of the simplifier due to combined removal of rows/columns and
  combined updates of lhs and rhs in some cases.

#----------------------------------------------------------------

Release 1.4.0

- Introduced exceptions for all unrecoverable errors (lack of memory, 
  no pricer, singular basis, etc.) to allow a calling application to clean up.

- Split the main() method in example.cpp into several smaller methods.

- Command line options "-V" and "-h" of example solver now output info
  on compilation flags.

- Replaced SPxLP::operator<< by SPxLP::writeLPF().

- Created directory 'tests' that should contain small programs that illustrate
  a (former) bug in SoPlex or something like unit tests.

- Fixed two bugs in spxlpfread.cpp (variables appearing in the bounds
  and general/integer/binary section).

- Corrected changeElement(): it now works also in the initial phase (NO_PROBLEM).
  A corresponding test file is 'tests/testChangeElement.cpp'.

- Implemented basic handling of reading a basis file (not yet thoroughly tested).
  The basic changes are in example.cpp, spxbasis.cpp, soplex.cpp, soplex.h.

- Bugfix in forest.cpp: use proper array access instead of pointer iteration.

- Bugfix: fix the the termination value (objective limit) problem (spxsolve.cpp)

- Added member function precision() in spxout.h

- Changed main target to soplexmain (from example)

- soplexmain.cpp now contains the main function. The output of this function should
  be more readable than the one of example. Original output can be turned on with
  the "-C" command line argument. The example is now available as target 'example' 
  in the makefile.

- Name unification:
  + moved SPxLP::readFile() from spxfileio.cpp to spxio.cpp
  + renamed SPxLP::dumpFile() to SPxLP::writeFile(), included default parameters, 
    and moved it from spxlpfwrite.cpp to spxio.cpp

- Added option to produce shared libraries with x86-Linux (OPT=opt-shared).

- Simplified postsolving in spxmainsm.cpp (do not recompute reduced costs) and removed memory leak

- Overworked spxbasis.cpp:readBasis(): removed bug and superflous code at end

- Removed bug in spxchangebasis.cpp, addedRows(), addedCols(): need to call loadMatrixVecs 
  in all cases, since the references to the matrix might have been invalided due to reallocation.

- Added fixing of the basis status if ZERO/P_FREE is not appropriate anymore, see spxsolver.cpp
  varStatusToBasisStatusCol() and varStatusToBasisStatusRow().

- Fixed bug with detecting infeasible instances if scaling theCoTest does not help.

- Corrected bug in spxlpfread.cpp with bounds on binary (old bounds were discarded).

- Corrected bug in spxsolver.cpp:maxInfeas(): the leave and entering case were switched.

- Removed superfluous variable 'count' in spxparmultpr.cpp/h

- Fixed small bug in SLUFactor::solveRight4update(): now variable n is storing ssvec's size correctly.

- Constructor interface for the scalers SPxEquiliSC and SPxGeometSC
  changed: parameter colFirst is removed since the corresponding member is not
  used. Printed names of the scalars are slightly changed. There are only 5
  command line options for the scalar left since two of the previous 6 options
  coincided.  

- Some modifications in the simplifier SPxMainSM to avoid numerical problems.

- Modified reading and writing of basis: the row and column names are now passed as pointers.
  Default names are entered if the pointers are 0. The changes appear in soplexmain.cpp, 
  spxbasis.cpp, soplex.cpp, soplex.h.

- Corrected bug in leave.cpp, left over from above correction dealing with infeasible instances.


#----------------------------------------------------------------

Release 1.3.2

- Keyword RANGES added in MPS format output (spxmpswrite.cpp)

- Bugfix in spxmainsm.cpp concerning index mapping.

- Bugfix: unsimplify() now works if the problem has vanished in preprocessing.

- Bugfix: spxsolver.cpp: Check for singular basis at the end of factorize().

- Bugfix: spxmainsm.cpp: assertion bug removed in 
  FreeZeroObjVariablePS::execute().

- Bugfix: SVector::dim() has to return the dimension and not the maximal index

- Extended FAQ

#----------------------------------------------------------------

Release 1.3.1

- Made writeBasis() and writeBasisFile() in SoPlex and SPxSolver const-methods.

- Restructured example.cpp and added a small example on constructing an
  LP using the callable library methods.

- Added SPxLP::writeLPF() with some parameters to dump 
  an LP in .lp-format with variable and row names. This also fixes some output 
  bugs. The still existing SPxLP::operator<< uses self-created default names.

- Bugfix in spxmainsm: IDs of rows and columns are not used anymore.

- Small bugfix in spxmainsm in connection with free variables.

- Check for necessary rounding added in spxmainsm.

- Bugfix in soplex method unsimplify(): check whether problem vanished in
  preprocessing added.

- Bugfix in spxlpfreader in connection with weird input (unconstrained rows).

- Bugfix in ssvector: use ssvec.size() instead of b.size() 
  (the former may be smaller due to flattened near-zero values).

#----------------------------------------------------------------

03. Feb 2006 Release 1.3.0

- A lot of stuff we have already forgotten about

- New preprocessing

- The number of warnings issued for ignored entries in MPS files is now limited
  to 1000 per file.

- Fixed bug in SPxSumST.

- Fixed bug in memory allocation of SVSet: now uses doubling strategy
  correctly. The bug led to serious performance degradation on large LPs
  under Windows, which is now fixed.

- Improved stability of textbook ratio tester. 

- Status output is now human-readable.

- Added reference solution files for further LP suites.

- Some bug fixes in LP change interface.

- Extensive testing: coverage analysis and valgrind. New binary 
  "exercise_LP_changes" performs kind of unit tests for LP change
  interface.

- Fixed segmentation fault in Forest-Tomlin update.

- Some assertions may be converted to generate warnings if NDEBUG is given.
  Compile with "-DWITH_WARNINGS" to achieve this. 

- Revised the whole documentation and made it doxygen-compatible.

- Made one-argument constructors explicit, added virtual destructors,
  blocked copy constructors and assignment operators.

- Fixed a bug in SSVector where zero vectors were not handled properly.
  Rewrote major parts of ssvector.cpp to avoid pointer arithmetic.

- Added the spxout class to redirect output depending on the error level, 
  provided all messages with a unique code for finding it with grep.
  
- Improvement of the LPF and MPS readers.

- Fixed a bug in example.cpp which resulted in ignoring the
  update type switch.

- Dropped all unused functions from the SLinSolver interface.

- Methods obj(), rhs(), lhs(), upper(), lower(), maxObj() of SPxLP
  that returned a non const reference renamed to *_w and 
  made protected. Use changeXXX() methods outside the class.

- Methods nofCols(), nofRows(), nofNZEs() deleted.
  Use nCols(), nRows(), nNzos() instead.

- Methods obj(), rhs(), lhs(), upper(), lower(), maxObj() of LPColSet 
  and LPRowSet that returned a non const reference renamed to *_w.

- LPColSet: renamed obj() methods to maxObj()/maxObj_w(), renamed writable
  lower(), upper() methods to lower_w()/upper_w(), removed SPxLP::obj().

- LPRowSet: renamed writable lhs()/rhs() methods to lhs_w()/rhs_w()

- SPxSolver has got an additional NOT_INIT (not properly initialized) status.

- Renamed SPxDefaultPR to SPxDantzigPR.

#----------------------------------------------------------------

10. Apr 2002 Release 1.2.1

- Interface of SoPlex::terminate() changed
- SoPlex::setRep(int) changed to SoPlex::setRep(Representation)

#----------------------------------------------------------------

16. Jan 2002 Release 1.2.0
