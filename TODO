$Id: TODO,v 1.57 2002/02/28 14:41:16 bzfkocht Exp $

Diesen Kram mal als @todo's schreiben ;-)

Abbruch bei minimieren mit Upper Bound

primal: >= UB und optimal
dual  : >= UB und shift = 0

---------------

spxbasis  load(xxx) umbennen in loadDesc, loadLP usw.

-----------------------------------------------------------------------------

bin/soplex.linux.x86.gnu.dbg-ld  -e -r check/LP/netlib/etamacro.mps

soplex.linux.x86.gnu.dbg-ld: src/spxvecs.cpp:240: void soplex::SoPlex::computeFrhs2(const soplex::Vector &, const soplex::Vector &): Assertion `colfb[i] == coufb[i]' failed.

240                 assert(colfb[i] == coufb[i]);
Current language:  auto; currently c++
(gdb) print i
$1 = 368
(gdb) print colfb[i]
$2 = 0
(gdb) print coufb[i]
$3 = -nan(0xc000000000000000)

kommt auch bei check.netlib.linux.x86.gnu.dbg

-----------------------------------------------------------------------------

nug12

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 41.26    400.98   400.98 41390449     0.01     0.01  soplex::CLUFactor::updateRow(int, int, int, int, double, double)
 10.33    501.40   100.42    45964     2.18     2.18  soplex::CLUFactor::vSolveLright2(double *, int *, int *, double, double *, int *, int

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 34.29   4791.24  4791.24 634306343     0.00     0.00  soplex::CLUFactor::updateRow(int, int, int, int, double, double)
 11.91   6455.54  1664.30   709664     0.00     0.00  soplex::CLUFactor::vSolveLright2(double *, int *, int *, double, double *, int *, int

-----------------------------------------------------------------------------


in ssvector/solve/vsolve etc. die vergleiche mit eps richtig.

stdio.h/printf die letzten erlegen.

tester/simplifier usw. auch wie pricer mit namen versehen.

neue abstracte basisklasse spxscaler mit spxequilim=spxscale
als erste implementierung.
   DataArray < Real > colscale;  ///< column scaleing factors
   DataArray < Real > rowscale;  ///< row scaleing factors
kann in die basisklasse
Als unterscheid zu simplifier kommt noch ein
getObjValue(col) aufruf dazu, außerdem kann dann der scaler
gleichseitig mit dem simplifiern eingesetzt werden.

vsolve/solve/update isNotZero() benutzen

openMP insbesondere pricer/ratiotest (compaq,intel)
ewtl die enterX/leaveX funktionen inlinen.

cplexrun mit delta = 1e-9 für bessere werte in check.

Wir bräuchten ein Programm, das ein LP ließt, eine Liste mit den 
Variablenwerten der Lösung von SoPlex und dann guckt ob die Bounds
stimmen usw. und so sagt ob die Lösung zulässig ist. AM besten mit
rationaler arithmetik.

SVSet::memPack, vermutlichen bug in flexelint melden. this-> ist überflüssig.

die constructoren auf einparametriege durchsehen (explicit)

in dataarray.h:reSize(int newsize) steht in der docxygen docu immer int n ???

Was macht SPxSolver in example. Warum können wir nicht einfach SoPlex 
benutzen?

BUG in spxscalesm.cc value() wird nicht descaliert. 
Entsprechender Aufruf fehlt auch in spxgeneralsm.cc

explicit einfuegen.

reinterpret_cast durchsehen

// lprow.cpp:double LPRow::infinity = 1e+100;
// spxlp.cpp:const double SPxLP::infinity = 1e+100;

Soplex1.1-Patch: keepBasis einfuehren fuer schnelles Reoptimieren
(siehe soplex-patch.txt)

Dokumentation: (alle * sind bereits fertig)

cring.h
clufactor.h
+slufactor.h  // hier fehlen noch ein paar Sachen  -> Thorsten!
+soplex.h // in Arbeit ;-)

sunos.sparc.sun LC 0 2494 14255
greenbea ER 
greenbeb ER

linux.alpha.compaq LC 0 542 3142
greenbea ER   =infeasible=
greenbeb LR   =infeasible=

linux.alpha.gnu LC 0 569 3399
greenbea LR
pilot-ja LR

osf1.alpha.compaq LC 0 522 2819
greenbeb ER
pilot    LR *
pilot87  ER

osf1.alpha.gnu LC 0 546 3286
greenbea LR 
pilot-ja LR

linux.x86.gnu LC 0 593 3209
greenbea ER 

hp-ux.hppa.hp LC 0 755 4626
greenbea LR
pilot-ja LR

irix.mips.sgi LC 0 6223 35624
greenbea LR
pilot-ja LR

linux.x86.intel LC 0 936 5121
greenbea ER







