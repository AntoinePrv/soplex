diff -b -B -N -r -u soplex1.1-orig/changesoplex.cc soplex1.1p/changesoplex.cc
--- soplex1.1-orig/changesoplex.cc	Tue Feb 23 15:13:44 1999
+++ soplex1.1p/changesoplex.cc	Tue Mar 23 13:51:34 1999
@@ -428,7 +428,7 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	removedRow( i ) ;
-	unInit() ;
+	keepBasis=0; unInit();
 	if( isInitialized() )
 	{
 	    int	n = SPxLP::nRows() ;
@@ -473,7 +473,7 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	removedRows( perm ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
 	if( isInitialized() )
 	{
 	    if( rep() == ROW )
@@ -531,7 +531,7 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	removedCol( i ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
 	if( isInitialized() )
 	{
 	    int	n = SPxLP::nCols() ;
@@ -576,7 +576,7 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	removedCols( perm ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
 	if( isInitialized() )
 	{
 	    if( rep() == COLUMN )
@@ -635,11 +635,13 @@
 {
     SPxLP::changeObj( newObj ) ;
     unInit() ;
+    keepBasis &= (type()==LEAVE) ^ (rep()==COLUMN);
 }
 
 void	SoPlex::changeObj( int i, double newVal )
 {
     SPxLP::changeObj( i, newVal ) ;
+    keepBasis &= (type()==LEAVE) ^ (rep()==COLUMN);
     unInit() ;
 }
 
@@ -695,7 +697,7 @@
     {
 	for( int i = newLower.dim()-1 ; i >= 0 ; --i )
 	    changeLowerStatus( desc().colStatus(i), newLower[i], SPxLP::upper(i), *this, i ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
     }
 }
 
@@ -705,7 +707,7 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	changeLowerStatus( desc().colStatus(i), newLower, SPxLP::upper(i), *this, i ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
     }
 }
 
@@ -761,7 +763,7 @@
     {
 	for( int i = newUpper.dim()-1 ; i >= 0 ; --i )
 	    changeUpperStatus( desc().colStatus(i), newUpper[i], SPxLP::lower(i), *this, i ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
     }
 }
 
@@ -771,7 +773,7 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	changeUpperStatus( desc().colStatus(i), newUpper, SPxLP::lower(i), *this, i ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
     }
 }
 
@@ -786,7 +788,7 @@
 	    changeUpperStatus( desc().colStatus(i), newUpper[i], SPxLP::lower(i), *this, i ) ;
 	    changeLowerStatus( desc().colStatus(i), newLower[i], SPxLP::upper(i), *this, i ) ;
 	}
-	unInit() ;
+	keepBasis=0; unInit() ;
     }
 }
 
@@ -798,7 +800,7 @@
     {
 	changeUpperStatus( desc().colStatus(i), newUpper, SPxLP::lower(i), *this, i ) ;
 	changeLowerStatus( desc().colStatus(i), newLower, SPxLP::upper(i), *this, i ) ;
-	unInit() ;
+	keepBasis=0; unInit() ;
     }
 }
 
@@ -855,6 +857,7 @@
     {
 	for( int i = nRows()-1 ; i >= 0 ; --i )
 	    changeLhsStatus( desc().rowStatus(i), newLhs[i], rhs(i), *this, i ) ;
+	keepBasis &= (type()==LEAVE) ^ (rep()==ROW);
 	unInit() ;
     }
 }
@@ -865,7 +868,8 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	changeLhsStatus( desc().rowStatus(i), newLhs, rhs(i), *this, i ) ;
-	unInit() ;
+      keepBasis &= (type()==LEAVE) ^ (rep()==ROW);
+      unInit();
     }
 }
 
@@ -921,6 +925,7 @@
     {
 	for( int i = nRows()-1 ; i >= 0 ; --i )
 	    changeRhsStatus( desc().rowStatus(i), newRhs[i], lhs(i), *this, i ) ;
+	keepBasis &= (type()==LEAVE) ^ (rep()==ROW);
 	unInit() ;
     }
 }
@@ -931,7 +936,8 @@
     if( SPxBasis::status() > NO_PROBLEM )
     {
 	changeRhsStatus( desc().rowStatus(i), newRhs, lhs(i), *this, i ) ;
-	unInit() ;
+      keepBasis &= (type()==LEAVE) ^ (rep()==ROW);
+      unInit();
     }
 }
 
@@ -946,6 +952,7 @@
 	    changeLhsStatus( desc().rowStatus(i), newLhs[i], rhs(i), *this, i ) ;
 	    changeRhsStatus( desc().rowStatus(i), newRhs[i], lhs(i), *this, i ) ;
 	}
+	keepBasis &= (type()==LEAVE) ^ (rep()==ROW);
 	unInit() ;
     }
 }
@@ -958,6 +965,7 @@
     {
 	changeLhsStatus( desc().rowStatus(i), newLhs, rhs(i), *this, i ) ;
 	changeRhsStatus( desc().rowStatus(i), newRhs, lhs(i), *this, i ) ;
+	keepBasis &= (type()==LEAVE) ^ (rep()==ROW);
 	unInit() ;
     }
 }
@@ -967,19 +975,19 @@
 void	SoPlex::changeRow( int i, const LPRow& newRow )
 {
     SPxLP::changeRow( i, newRow ) ;
-    unInit() ;
+    keepBasis=0; unInit() ;
 }
 
 void	SoPlex::changeCol( int i, const LPCol& newCol )
 {
     SPxLP::changeCol( i, newCol ) ;
-    unInit() ;
+    keepBasis=0; unInit() ;
 }
 
 void	SoPlex::changeElement( int i, int j, double val )
 {
     SPxLP::changeElement( i, j, val ) ;
-    unInit() ;
+    keepBasis=0; unInit() ;
 }
 
 void	SoPlex::changeSense( SPxSense sns )



diff -b -B -N -r -u soplex1.1-orig/soplex.cc soplex1.1p/soplex.cc
--- soplex1.1-orig/soplex.cc	Tue Feb 23 15:13:44 1999
+++ soplex1.1p/soplex.cc	Tue Mar 23 13:51:34 1999
@@ -830,6 +829,7 @@
     , solveVector2  ( 0 )
     , coSolveVector2( 0 )
     , initialized   ( 0 )
+    , keepBasis     ( 0 )
     , maxIters      ( -1 )
     , maxTime       ( -1 )
 {


diff -b -B -N -r -u soplex1.1-orig/soplex.hh soplex1.1p/soplex.hh
--- soplex1.1-orig/soplex.hh	Tue Feb 23 15:13:44 1999
+++ soplex1.1p/soplex.hh	Tue Mar 23 13:51:34 1999
@@ -1438,7 +1438,7 @@
 	//@{
 private:
 	int		initialized ;	// 1, if all vectors are setup 0 otherwise
-
+        int             keepBasis;      // 1, if last basis is still valid
 protected:
 	    /** Has the internal data been initialized.
 		As long as an instance of #SoPlex# is not #initialized#, no member


diff -b -B -N -r -u soplex1.1-orig/spxsolve.cc soplex1.1p/spxsolve.cc
--- soplex1.1-orig/spxsolve.cc	Tue Feb 23 15:13:45 1999
+++ soplex1.1p/spxsolve.cc	Tue Mar 23 13:58:51 1999
@@ -136,10 +136,15 @@
 	if( SPxBasis::status() <= NO_PROBLEM )
 	    SPxBasis::load( this ) ;
 	 */
+      if (keepBasis){
+      	// initialized=1;              // ?
+      	init();
+      }else{
 	if( thestarter )				// no basis and no starter.
 	    thestarter->generate( *this ) ;		// generate start basis.
 	init() ;
     }
+    }
     thepricer->setEpsilon( delta() ) ;
     setType( type() ) ;
 
@@ -302,6 +307,7 @@
     }
 
     theTime.stop() ;
+    if (status()==SOLVED) keepBasis=1;
     return status() ;
 }
 